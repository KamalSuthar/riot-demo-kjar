import java.util.List;
import net.rithms.riot.api.endpoints.match.dto.Match;
import com.myproject.MatchAverages;

rule insertmatchdata 
ruleflow-group 'teamstats'
no-loop
when
    $matches : List()
    $match : Match() from $matches
    $averages : MatchAverages()
    
then
    $averages.setTotalMatches($matches.size());
    insert($match);
end

rule evaluatematch
ruleflow-group 'teamstats'
when
    $match : Match()
    $averages : MatchAverages()
then
    $averages.setTotalMatches( $averages.getTotalMatches() + 1 );
    $averages.setTotalBaronKills( $averages.getTotalBaronKills() + $match.getTeams().get(0).getBaronKills() );
    $averages.setTotalDragonKills( $averages.getTotalDragonKills() + $match.getTeams().get(0).getDragonKills() );
    if($match.getTeams().get(0).isFirstBlood()) {
        $averages.setTotalFirstBlood( $averages.getTotalFirstBlood() + 1 );
    }
    $averages.setTotalTowerKills( $averages.getTotalTowerKills() + $match.getTeams().get(0).getTowerKills() );
    
    if($match.getTeams().get(0).getWin().equals("Win")) {
        $averages.setTotalWins( $averages.getTotalWins() + 1 );
    }
end